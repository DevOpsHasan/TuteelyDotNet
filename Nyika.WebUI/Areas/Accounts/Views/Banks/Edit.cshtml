@model Nyika.Domain.Entities.Accounts.Bank

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Accounts/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.BankID)
    <div class="card text-white bg-dark p-md-0 mx-0 my-0" style="min-height:540px">
        <div class="card-header bg-dark">
            <div class="row">
                <div class="col-md-4">
                    <h4>Update Bank</h4>
                </div>
                <div class="col-md-8 text-right">
                    <div class="btn-group btn-group-justified">
                        <input type="submit" value="Save" class="btn btn-secondary mx-md-1" />
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
                    </div>
                </div>
            </div>

        </div>
        <div class="card-body p-md-3 b-0 m-md-0">


            <div class="row">
                <div class="col-md-12">
                    <div class="form-horizontal">

                        <div class="form-group">
                            @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.AccountNumber, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Currency, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Currency, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.BankAddress, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.BankAddress, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BankAddress, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <h4>@ViewBag.Msg</h4>
                </div>
            </div>
        </div>
    </div>
}







@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
