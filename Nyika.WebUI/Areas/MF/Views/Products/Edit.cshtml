@model Nyika.Domain.Entities.MF.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/MF/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ProductID)
    <div class="card text-white bg-dark p-md-0 mx-0 my-0" style="min-height:540px">
        <div class="card-header bg-dark">
            <div class="row">
                <div class="col-md-4">
                    <h4>Update Product</h4>
                </div>
                <div class="col-md-8 text-right">
                    <div class="btn-group btn-group-justified">
                        <input type="submit" value="Save" class="btn btn-secondary mx-md-1" />
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
                    </div>
                </div>
            </div>

        </div>
        <div class="card-body p-md-3 b-0 m-md-0">


            <div class="row">
                <div class="col-md-4">
                    <div class="form-horizontal">

                        <div class="form-group">
                            @Html.LabelFor(model => model.ProjectID, "Project", htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.DropDownList("ProjectID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProjectID, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.InterestRate, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.InterestRate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.InterestRate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.InterestRateType, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.InterestRateType, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.InterestRateType, "", new { @class = "text-danger" })
                            </div>
                        </div>



                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-horizontal">


                        <div class="form-group">
                            @Html.LabelFor(model => model.IntFactor, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.IntFactor, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.IntFactor, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.NoOfInstallment, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.NoOfInstallment, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NoOfInstallment, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.DropDownList("Status", new SelectList(new[] { "Active", "Inactive" }), htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <h4>@ViewBag.Msg</h4>
                </div>
            </div>
        </div>
    </div>
}







@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
